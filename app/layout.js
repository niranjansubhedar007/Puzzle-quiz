import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  );
}


// 'use client'

// import { useEffect, useState } from 'react';
// import axios from 'axios';

// export default function Home() {
//   const [animals, setAnimals] = useState([]);

//   useEffect(() => {
//     axios.get('http://localhost:5000/api/puzzle/animals')
//       .then(response => {
//         console.log(response.data)
//         setAnimals(response.data);
//       })
//       .catch(error => {
//         console.error('Error fetching animal data:', error);
//       });
//   }, []);

//   return (
//     <div className="max-w-screen-md mx-auto">
//       <h1 className="text-2xl font-bold mb-4">Animal Puzzle</h1>
//       <div className="flex flex-col items-center">
//         {animals.map(animal => (
//           <div key={animal.name} className="animal-item flex items-center mb-4">
//             <img src={`/images/${animal.image}`} alt={animal.name} className="w-24 h-auto mr-8" />
//             <div className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"></div> {/* Bullet point */}

//             <div className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"></div> {/* Bullet point */}
//             <img src={`/images/${animal.shadow}`} alt={`${animal.name} Shadow`} className="w-24 h-auto" />
//           </div>
//         ))}
//       </div>
//     </div>

//   );
// }





// 'use client'

// import { useEffect, useState } from 'react';
// import axios from 'axios';

// export default function Home() {
  

//   return (
//     <div className="max-w-screen-md mx-auto">
//       <h1 className="text-2xl font-bold mb-4">Animal Puzzle</h1>
//       <div className="flex flex-col items-center">
//           <div  className="animal-item flex items-center mb-4">
//             <img src={`/images/cat.png`} alt={'cat'} className="w-24 h-auto mr-8" />
//             <div className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"></div> {/* Bullet point */}
//             <div className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"></div> {/* Bullet point */}
//             <img src={`/images/dog_shadow.png`} alt={'shadow'} className="w-24 h-auto" />
//           </div>
//           <div  className="animal-item flex items-center mb-4">
//             <img src={`/images/lion.png`} alt={'cat'} className="w-24 h-auto mr-8" />
//             <div className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"></div> {/* Bullet point */}
//             <div className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"></div> {/* Bullet point */}
//             <img src={`/images/cat_shadow.png`} alt={'shadow'} className="w-24 h-auto" />
//           </div>
//           <div  className="animal-item flex items-center mb-4">
//             <img src={`/images/crow.png`} alt={'cat'} className="w-24 h-auto mr-8" />
//             <div className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"></div> {/* Bullet point */}
//             <div className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"></div> {/* Bullet point */}
//             <img src={`/images/elephant_shadow.png`} alt={'shadow'} className="w-24 h-auto" />
//           </div>
//           <div  className="animal-item flex items-center mb-4">
//             <img src={`/images/elephant.png`} alt={'cat'} className="w-24 h-auto mr-8" />
//             <div className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"></div> {/* Bullet point */}
//             <div className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"></div> {/* Bullet point */}
//             <img src={`/images/crow_shadow.png`} alt={'shadow'} className="w-24 h-auto" />
//           </div>
//           <div  className="animal-item flex items-center mb-4">
//             <img src={`/images/dog.png`} alt={'cat'} className="w-24 h-auto mr-8" />
//             <div className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"></div> {/* Bullet point */}
//             <div className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"></div> {/* Bullet point */}
//             <img src={`/images/lion_shadow.png`} alt={'shadow'} className="w-24 h-auto" />
//           </div>
            

      
//       </div>
//     </div>

//   );
// }



// 'use client'

// import { useEffect, useRef, useState } from 'react';

// export default function Home() {
//   const [lines, setLines] = useState([]);
//   const [isDrawing, setIsDrawing] = useState(false);
//   const [startPoint, setStartPoint] = useState({ x: 0, y: 0 });
//   const [endPoint, setEndPoint] = useState({ x: 0, y: 0 });
//   const canvasRef = useRef(null);

//   useEffect(() => {
//     const canvas = canvasRef.current;
//     const context = canvas.getContext('2d');
//     context.clearRect(0, 0, canvas.width, canvas.height);

//     lines.forEach(line => {
//       context.beginPath();
//       context.moveTo(line.start.x, line.start.y);
//       context.lineTo(line.end.x, line.end.y);
//       context.strokeStyle = 'black';
//       context.lineWidth = 2;
//       context.stroke();
//     });

//     if (isDrawing) {
//       context.beginPath();
//       context.moveTo(startPoint.x, startPoint.y);
//       context.lineTo(endPoint.x, endPoint.y);
//       context.strokeStyle = 'black';
//       context.lineWidth = 2;
//       context.stroke();
//     }
//   }, [lines, isDrawing, startPoint, endPoint]);

//   const handleMouseDown = (e) => {
//     setIsDrawing(true);
//     const rect = e.target.getBoundingClientRect();
//     const x = e.clientX - rect.left;
//     const y = e.clientY - rect.top;
//     setStartPoint({ x, y });
//     setEndPoint({ x, y });
//     document.body.style.cursor = 'pointer';
//   };

//   const handleMouseMove = (e) => {
//     if (isDrawing) {
//       const rect = e.target.getBoundingClientRect();
//       const x = e.clientX - rect.left;
//       const y = e.clientY - rect.top;
//       setEndPoint({ x, y });
//     }
//   };

//   const handleMouseUp = () => {
//     setIsDrawing(false);
//     document.body.style.cursor = 'default';
//     setLines([...lines, { start: startPoint, end: endPoint }]);
//   };

//   const handleShadowMouseEnter = (e) => {
//     if (isDrawing) {
//       const rect = e.target.getBoundingClientRect();
//       const x = rect.left + rect.width / 2;
//       const y = rect.top + rect.height / 2;
//       setEndPoint({ x, y });
//     }
//   };

//   return (
//     <div className="max-w-screen-md mx-auto" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>
//       <h1 className="text-2xl font-bold mb-4">Animal Puzzle</h1>
//       <div className="flex flex-col items-center">
//         <div className="animal-item flex items-center mb-4">
//           <img
//             src={`/images/cat.png`}
//             alt={'cat'}
//             className="w-24 h-auto mr-8"
//             onMouseDown={handleMouseDown}
//           />
//           <div
//             className="w-2 h-2 bg-black rounded-full mr-64 cursor-pointer"
//             onMouseDown={handleMouseDown}
//           />
//           <div
//             className="w-2 h-2 bg-black rounded-full mr-4 cursor-pointer"
//             onMouseDown={handleMouseDown}
//           />
//           <img
//             src={`/images/dog_shadow.png`}
//             alt={'shadow'}
//             className="w-24 h-auto"
//             onMouseEnter={handleShadowMouseEnter}
//           />
//         </div>
//       </div>
//       <canvas
//         ref={canvasRef}
//         style={{ position: 'absolute', top: 0, left: 0 }}
//         width={window.innerWidth}
//         height={window.innerHeight}
//         onMouseDown={handleMouseDown}
//       />
//     </div>
//   );
// }
























// "use client";

// import { useEffect, useRef, useState } from "react";
// import axios from "axios";

// export default function Home() {
//   const [lines, setLines] = useState([]);
//   const [isDrawing, setIsDrawing] = useState(false);
//   const [startPoint, setStartPoint] = useState({ x: 0, y: 0 });
//   const [endPoint, setEndPoint] = useState({ x: 0, y: 0 });
//   const canvasRef = useRef(null);
//   const [showPopup, setShowPopup] = useState(false); // State for showing the popup
//   const [popupFraction, setPopupFraction] = useState(""); // State for popup fraction

//   const [formData, setFormData] = useState({
//     item1: "1",
//     item2: "2",
//     item3: "3",
//     item4: "4",
//     item5: "5",
//     item6: "",
//     item7: "",
//     item8: "",
//     item9: "",
//     item10: "",
//   });

//   const Popup = ({ fraction, handleClose, allCorrect }) => {
//     useEffect(() => {
//       if (!allCorrect) {
//         const timer = setTimeout(() => {
//           handleClose();
//         }, 3000);

//         return () => clearTimeout(timer);
//       }
//     }, [allCorrect, handleClose]);

//     return (
//       <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
//         <div className="bg-white p-6 rounded shadow-md">
//           {allCorrect ? (
//             <>
//               <h2 className="text-lg font-semibold mb-4">Congratulations!</h2>
//               <p className="mb-4">All pairs are correct!</p>
//             </>
//           ) : (
//             <>
//               <h2 className="text-lg font-semibold mb-4">
//                 You won {fraction} marks out of 5!
//               </h2>
//             </>
//           )}
//         </div>
//       </div>
//     );
//   };

//   const handleChange = (e) => {
//     setFormData({ ...formData, [e.target.name]: e.target.value });
//   };
//   // const handleSubmit = async (e) => {
//   //   e.preventDefault();
//   //   try {
//   //     const response = await axios.post(
//   //       "http://localhost:5000/api/pair",
//   //       formData
//   //     );

//   //     let trueIsFalseCount = 0;
//   //     if (!response.data.pair.isFalse1) trueIsFalseCount++;
//   //     if (!response.data.pair.isFalse2) trueIsFalseCount++;
//   //     if (!response.data.pair.isFalse3) trueIsFalseCount++;
//   //     if (!response.data.pair.isFalse4) trueIsFalseCount++;
//   //     if (!response.data.pair.isFalse5) trueIsFalseCount++;

//   //     const fraction = `${trueIsFalseCount}`;

//   //     if (trueIsFalseCount === 5) {
//   //       setPopupFraction(fraction);
//   //       setShowPopup(true);
//   //     } else {
//   //       const incorrectPairs = [];
//   //       if (!response.data.pair.isFalse1) incorrectPairs.push("1");
//   //       if (!response.data.pair.isFalse2) incorrectPairs.push("2");
//   //       if (!response.data.pair.isFalse3) incorrectPairs.push("3");
//   //       if (!response.data.pair.isFalse4) incorrectPairs.push("4");
//   //       if (!response.data.pair.isFalse5) incorrectPairs.push("5");

//   //       const incorrectPairsString = incorrectPairs.join(", ");
//   //       setPopupFraction(fraction);
//   //       setShowPopup(true);
//   //       console.log(`Incorrect pairs: ${incorrectPairsString}`);
//   //     }
//   //   } catch (error) {
//   //     console.error("Error creating pair:", error);
//   //   }
//   // };

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     try {
//       const response = await axios.post(
//         "http://localhost:5000/api/pair",
//         formData
//       );
  
//       // Verify the structure of response.data.pair and log it to the console
//       console.log(response.data.pair);
  
//       let trueIsFalseCount = 0;
//       if (!response.data.pair.isFalse1) trueIsFalseCount++;
//       if (!response.data.pair.isFalse2) trueIsFalseCount++;
//       if (!response.data.pair.isFalse3) trueIsFalseCount++;
//       if (!response.data.pair.isFalse4) trueIsFalseCount++;
//       if (!response.data.pair.isFalse5) trueIsFalseCount++;
  
//       const fraction = `${trueIsFalseCount}`;
  
//       if (trueIsFalseCount === 5) {
//         setPopupFraction(fraction);
//         setShowPopup(true);
//       } else {
//         const incorrectPairs = [];
//         if (!response.data.pair.isFalse1) incorrectPairs.push("1");
//         if (!response.data.pair.isFalse2) incorrectPairs.push("2");
//         if (!response.data.pair.isFalse3) incorrectPairs.push("3");
//         if (!response.data.pair.isFalse4) incorrectPairs.push("4");
//         if (!response.data.pair.isFalse5) incorrectPairs.push("5");
  
//         const incorrectPairsString = incorrectPairs.join(", ");
//         setPopupFraction(fraction);
//         setShowPopup(true);
//         console.log(`Incorrect pairs: ${incorrectPairsString}`);
  

//       }
//     } catch (error) {
//       console.error("Error creating pair:", error);
//     }
//   };
  



//   const handleClosePopup = () => {
//     setShowPopup(false);
//     setPopupFraction("");
//   };

//   useEffect(() => {
//     const canvas = canvasRef.current;
//     const context = canvas.getContext("2d");
//     context.clearRect(0, 0, canvas.width, canvas.height);

//     lines.forEach((line) => {
//       context.beginPath();
//       context.moveTo(line.start.x, line.start.y);
//       context.lineTo(line.end.x, line.end.y);
//       context.strokeStyle = "black";
//       context.lineWidth = 2;
//       context.stroke();
//     });

//     if (isDrawing) {
//       context.beginPath();
//       context.moveTo(startPoint.x, startPoint.y);
//       context.lineTo(endPoint.x, endPoint.y);
//       context.strokeStyle = "black";
//       context.lineWidth = 2;
//       context.stroke();
//     }
//   }, [lines, isDrawing, startPoint, endPoint]);

//   const handleMouseDown = (e) => {
//     setIsDrawing(true);
//     const rect = e.target.getBoundingClientRect();
//     const x = e.clientX - rect.left;
//     const y = e.clientY - rect.top;
//     setStartPoint({ x, y });
//     setEndPoint({ x, y });
//     document.body.style.cursor = "pointer";
//   };

//   const handleMouseMove = (e) => {
//     if (isDrawing) {
//       const rect = e.target.getBoundingClientRect();
//       const x = e.clientX - rect.left;
//       const y = e.clientY - rect.top;
//       setEndPoint({ x, y });
//     }
//   };

//   const handleMouseUp = () => {
//     setIsDrawing(false);
//     document.body.style.cursor = "default";
//     setLines((prevLines) => [
//       ...prevLines,
//       { start: startPoint, end: endPoint },
//     ]);
//   };

//   const handleShadowMouseEnter = (e) => {
//     if (isDrawing) {
//       const rect = e.target.getBoundingClientRect();
//       const x = rect.left + rect.width / 2;
//       const y = rect.top + rect.height / 2;
//       setEndPoint({ x, y });
//     }
//   };
//   return (
//     <>
//       <div
//         className="  min-h-screen"
//         onMouseMove={handleMouseMove}
//         onMouseUp={handleMouseUp}
//       >

//         <form
//           onSubmit={handleSubmit}
//           className="space-y-4  bg-gray-100 p-2 w-fit px-8 justify-center items-center text-center flex flex-col mx-auto "
//         >
//           <div className="flex flex-col items-center justify-between">
//             {/* <h1 className="text-2xl font-bold mb-4">Animal Puzzle</h1> */}
//             <div className="flex items-center justify-between mb-4">
//               <input
//                 type="text"
//                 id="item1"
//                 name="item1"
//                 value={formData.item1}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 mr-4 z-20 hidden"
//               />
//               <span className="mr-7">1</span>

//               <img
//                 src={`/images/cat.png`}
//                 alt="cat"
//                 className="w-24 h-auto mr-8"
//                 onMouseDown={handleMouseDown}
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox1"
//                 name="checkbox1"
//                 value={formData.item1}
//                 className="z-10 mr-10"
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox5"
//                 name="checkbox5"
              
//                 className="z-10 mr-6"
//               />
//               <img
//                 src={`/images/dog_shadow.png`}
//                 alt="shadow"
//                 className="w-24 h-auto"
//                 onMouseEnter={handleShadowMouseEnter}
//               />
//               <input
//                 type="text"
//                 id="item6"
//                 name="item6"
//                 value={formData.item6}
//                 onChange={handleChange}
//                 className={
//                   "border border-gray-300 rounded px-2 py-1 w-20 ml-4 z-20 "
//                 }
//                 autoComplete="off"
//               />
//               {/* 6 */}
//             </div>

//             {/* Repeat the pattern for other items */}
//             <div className="flex items-center justify-between mb-4">
//               <input
//                 type="text"
//                 id="item2"
//                 name="item2"
//                 value={formData.item2}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 mr-4 w-20 z-20 hidden"
//               />
//               <span className="mr-7">2</span>

//               <img
//                 src={`/images/lion.png`}
//                 alt="lion"
//                 className="w-24 h-auto mr-8"
//                 onMouseDown={handleMouseDown}
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox2"
//                 value={formData.item2}
//                 name="checkbox2"
//                 className="z-10 mr-10"
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox4"
//                 name="checkbox4"
       
//                 className="z-10 mr-6"
//               />
//               <img
//                 src={`/images/crow_shadow.png`}
//                 alt="shadow"
//                 className="w-24 h-auto"
//                 onMouseEnter={handleShadowMouseEnter}
//               />
//               <input
//                 type="text"
//                 id="item7"
//                 name="item7"
//                 value={formData.item7}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 ml-4 z-20"
//                 autoComplete="off"
//               />
//               {/* 7 */}
//             </div>

//             <div className="flex items-center justify-between mb-4">
//               <input
//                 type="text"
//                 id="item3"
//                 name="item3"
//                 value={formData.item3}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 mr-4 z-20 hidden"
//               />

//               <span className="mr-7">3</span>

//               <img
//                 src={`/images/elephant.png`}
//                 alt="elephant"
//                 className="w-24 h-auto mr-8"
//                 onMouseDown={handleMouseDown}
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox3"
//                 name="checkbox3"

//                 value={formData.item3}
//                 className="z-10 mr-10"
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox3"
//                 name="checkbox3"
           
//                 className="z-10 mr-6"
//               />
//               <img
//                 src={`/images/lion_shadow.png`}
//                 alt="shadow"
//                 className="w-24 h-auto"
//                 onMouseEnter={handleShadowMouseEnter}
//               />
//               <input
//                 type="text"
//                 id="item8"
//                 name="item8"
//                 value={formData.item8}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 ml-4 z-20"
//                 autoComplete="off"
//               />
//               {/* 8 */}
//             </div>

//             <div className="flex items-center justify-between mb-4">
//               <input
//                 type="text"
//                 id="item4"
//                 name="item4"
//                 value={formData.item4}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 mr-4 z-20  hidden"
//               />
//               <span className="mr-7">4</span>

//               <img
//                 src={`/images/crow.png`}
//                 alt="crow"
//                 className="w-24 h-auto mr-8"
//                 onMouseDown={handleMouseDown}
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox4"
//                 name="checkbox4"
//                 value={formData.item4}

//                 className="z-10 mr-10"
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox2"
            

//                 name="checkbox2"
//                 className="z-10 mr-6"
//               />
//               <img
//                 src={`/images/elephant_shadow.png`}
//                 alt="shadow"
//                 className="w-24 h-auto"
//                 onMouseEnter={handleShadowMouseEnter}
//               />
//               <input
//                 type="text"
//                 id="item9"
//                 name="item9"
//                 value={formData.item9}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 ml-6 z-20"
//                 autoComplete="off"
//               />
//               {/* 9 */}
//             </div>

//             <div className="flex items-center justify-between mb-4">
//               <input
//                 type="text"
//                 id="item5"
//                 name="item5"
//                 value={formData.item5}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 mr-4 w-20 z-20   hidden"
//               />
//               <span className="mr-7">5</span>

//               <img
//                 src={`/images/dog.png`}
//                 alt="dog"
//                 className="w-24 h-auto mr-8 "
//                 onMouseDown={handleMouseDown}
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox5"
//                 value={formData.item5}

//                 name="checkbox5"
//                 className="z-10 mr-10"
//               />
//               <input
//                 type="checkbox"
//                 id="checkbox1"
//                 name="checkbox1"
           

//                 className="z-10 mr-6"
//               />
//               <img
//                 src={`/images/cat_shadow.png`}
//                 alt="shadow"
//                 className="w-24 h-auto"
//                 onMouseEnter={handleShadowMouseEnter}
//               />
//               <input
//                 type="text"
//                 id="item10"
//                 name="item10"
//                 value={formData.item10}
//                 onChange={handleChange}
//                 className="border border-gray-300 rounded px-2 py-1 w-20 ml-4 z-20"
//                 autoComplete="off"
//               />
//               {/* 10 */}
//             </div>
//           </div>
//           <div className=" justify-center flex">
//             <button
//               type="submit"
//               className="bg-blue-500  text-white px-4 py-2 rounded hover:bg-blue-600 
//              cursor-pointer "
//               style={{ zIndex: 100 }}
//             >
//               Submit
//             </button>
//           </div>
//         </form>
//         <canvas
//           ref={canvasRef}
//           style={{ position: "absolute", top: 0, left: 0 }}
//           width={window.innerWidth}
//           height={window.innerHeight}
//           onMouseDown={handleMouseDown}
//         />
//         {showPopup && (
//           <Popup fraction={popupFraction} handleClose={handleClosePopup} />
//         )}
//       </div>
//     </>
//   );
// }


